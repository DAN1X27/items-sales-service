services:
  users-service_db:
    image: 'postgres:17-alpine'
    container_name: users-service-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./users-service/db_data:/var/lib/postgresql/data
      - ./users-service/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    networks:
      - items-sales-service-net
    restart: unless-stopped
  announcements-service_db:
    image: 'postgres:17-alpine'
    container_name: announcements-service-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./announcements-service/db_data:/var/lib/postgresql/data
      - ./announcements-service/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5435:5432"
    networks:
      - items-sales-service-net
    restart: unless-stopped
  chats-service_db:
    image: 'postgres:17-alpine'
    container_name: chats-service-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./chats-service/db_data:/var/lib/postgresql/data
      - ./chats-service/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5436:5432"
    networks:
      - items-sales-service-net
    restart: unless-stopped
  redis-db:
    image: 'redis:latest'
    container_name: "redis-db"
    ports:
      - "6379:6379"
    networks:
      - items-sales-service-net
    command: >
      --requirepass ${DB_PASSWORD}
networks:
  items-sales-service-net:
    external: true
    name: items-sales-service-net
volumes:
  db_data: