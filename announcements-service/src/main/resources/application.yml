spring:
  application:
    name: 'announcements-service'
  config:
    import: 'configserver:'
  kafka:
    consumer:
      bootstrap-servers: ${kafka.host}:${kafka.port}
      group-id: ${kafka.group-id}
  cloud:
    config:
      uri: ${config_uri}
      username: ${config_username}
      password: ${config_password}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  servlet:
    multipart:
      max-file-size: ${max_file_size}
      max-request-size: ${max_file_size}
server:
  port: 8082
max_storage_days: ${max_storage_days}
max_images_count: ${max_images_count}
currency_converter_api_key: ${currency_converter_api_key}
eureka:
  instance:
    instanceId: ${spring.application.name}
    hostname: ${eureka.client.hostname}
    preferIpAddress: false
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${eureka.server.url}
management:
  endpoints:
    web:
      exposure:
        include: refresh